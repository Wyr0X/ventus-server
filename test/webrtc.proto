syntax = "proto3";

package webrtc;

// Mensaje enviado por el cliente con WebRTC
message ClientMessageWebRTC {
    oneof MessageType {
        WebRTCOffer offer = 1;
        WebRTCAnswer answer = 2;
        WebRTCICECandidate iceCandidate = 3;
    }
}
message ServerMessageWebRTC {
    oneof MessageType {
        WebRTCOffer offer = 1;
        WebRTCAnswer answer = 2;
        WebRTCICECandidate iceCandidate = 3;
        CloseConnection closeConnection = 4;
    }
}

// Mensaje para enviar una oferta de WebRTC desde el cliente A al cliente B
message WebRTCOffer {
    string sdp = 1;  // SDP de la oferta
    string candidate = 2;  // Candidate ICE (opcional)
    string user_id = 3;  // Identificador del usuario que realiza la oferta
}

// Mensaje para enviar una respuesta de WebRTC desde el cliente B al cliente A
message WebRTCAnswer {
    string sdp = 1;  // SDP de la respuesta
    string candidate = 2;  // Candidate ICE (opcional)
    string user_id = 3;  // Identificador del usuario que responde
}

// Mensaje para enviar una ICE Candidate (candidato ICE) durante la negociación de la conexión
message WebRTCICECandidate {
    string candidate = 1;  // Candidate ICE
    string sdp_mid = 2;  // Identificador de la media description
    int32 sdp_mline_index = 3;  // Índice de la media description
    string user_id = 4;  // Identificador del usuario que envía el candidato ICE
}

// Mensaje para notificar el cierre de la conexión WebRTC
message CloseConnection {
    string user_id = 1;  // Identificador del usuario cuya conexión debe cerrarse
}

// Mensaje genérico para la señalización WebRTC
message Signal {
    oneof signal_type {
        WebRTCOffer offer = 1;
        WebRTCAnswer answer = 2;
        WebRTCICECandidate ice_candidate = 3;
        CloseConnection close_connection = 4;
    }
}
